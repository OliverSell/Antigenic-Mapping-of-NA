## Source functions

```{r}
source("../R/99_proj_func.R")
```

## Libraries:

```{r}
#| message: false
library("tidyverse")
library("dplyr")
library("janitor")
```

## Load data

```{r}
titer_table_covid <- read_tsv("../data/titer_table.tsv.gz")

```

## Counting dimensions

```{r}
#| echo: false
#| message: false

#Functions that count the axis

print("The amount of virus strains are:")
#Count the number of virus strains
titer_table |> 
  select("...2") |> 
  slice(9:n()) |> 
  filter_all(any_vars(!is.na(.))) |> 
  nrow()


print("The amount of antigen sera are:")
#Count the number of antigen sera. Not really "tidyverse" but it works
titer_table |> 
  slice(6) |> 
  select(-c(1:5)) |> 
  as.list() |>
  map_lgl(~ !is.na(.)) |> 
  sum()

# Function to check if 80% of a column is empty
check_empty <- function(column) {
  empty_count <- sum(is.na(column) | column == "")
  return(empty_count >= 0.8 * length(column))
}

# Using tidyverse functions to check if 80% of each column is empty
#empty_columns <- titer_dirty %>%
#  map_lgl(check_empty)



```

## Fetching Serum ID's

```{r}
#| warning: false
#######################
### Serum ID string ###
#######################

serum_ids <- titer_table |>
  slice(6) |> # Select the row with Serum IDs
  dplyr::select(where(~ any(!is.na(.)))) |> #Remove NA
  unlist() |> # Flatten it to a vector 
  as.character()
```

## Data wrangling

```{r}

########################
#### Titer Cleaning ####
########################
titer_dirty <- titer_table_covid |>
  # Remove first with meta data.
  slice(-(1:8)) |>
  # Remove coloumns that have no data. 
  # Function keeps columns with at least one value is not NA. 
  dplyr::select(where(~ any(!is.na(.)))) |> 
  set_colnames_from_row(row_number = 1) |> 
  t() |> 
  as_tibble(rownames = NA) |> 
  slice(-(1:2)) |> 
  select(where(~ !(all(is.na(.)) | all(. == "")))) |> 
  set_colnames_from_row(row_number = 1) |> 
  select(-1) |> 
  as.data.frame()

  
sera_names <- titer_table_covid |>
  slice(-(1:8)) |>
  dplyr::select(where(~ any(!is.na(.)))) |> 
  head(1) |> 
  select(-(1:3)) |> 
  as_vector()

row.names(titer_dirty) <- sera_names

titer_clean <- t(titer_dirty)

class(titer_clean)
#Getting data ready for mapping
titer_clean <- titer_clean |> 
  as.data.frame() |> 
  mutate(across(everything(), ~replace_na(.x, "*")))

View(titer_clean)
#######################
### Attribute Table ###
#######################
attr_table <- titer_table |>
  slice(-(1:4)) |>
  slice_head(n = 3) |>
  t() |>
  as_tibble() |>
  slice(-(1:4)) |>
  set_colnames_from_row(row_number = 1)


# Group 1 - 2, 11, 18, 21, 40, 43, 46, 56
# Group 2 - 7, 19, 29, 32, 37, 39, 45, 59
# Group 3 - 1, 15, 25, 33, 35, 38, 44, 48
# Group 4a - 16, 31, 41, 54
# Group 4b -9, 12, 28, 34
```


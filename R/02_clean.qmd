## Source functions

```{r}
source("../R/99_proj_func.R")
```

## Libraries:

```{r}
#| message: false
#| warning: false
## ASK MARTHA
## ASK MARTHA
## ASK MARTHA

library("tidyverse")
library("dplyr")
library("Racmacs")
```

## Load data

```{r}
#| message: false
#| warning: false
titer_table <- read_tsv("../data/titer_dirty.tsv.gz")
```

## Data wrangling

```{r}
#| warning: false
########################
#### Titer Cleaning ####
########################
titer_dirty <- titer_table |>
  # Remove first with meta data.
  slice(-(1:10)) |> 
  t() |> 
  as_tibble(rownames = NA) |> 
  slice(-(1:6)) |> 
  set_colnames_from_row(row_number = 1) |> 
  as.data.frame()

#Fetches the names of the sera
sera_names <- titer_table |>
  slice(-(1:8)) |> 
  head(1) |> 
  select(-(1:7)) |> 
  as_vector()

#Adds sera names
row.names(titer_dirty) <- sera_names

titer_clean <- t(titer_dirty)

#Getting data ready for mapping
titer_clean <- titer_clean |> 
  as.data.frame() |> 
  mutate(across(everything(), ~replace_na(.x, "*")))

#Defining the amount of sera and antigen
antigen_sera_n <- ncol(titer_clean)
virus_strains_n <- nrow(titer_clean)

#
ag_names <- rownames(titer_clean)

#######################
### Attribute Table ###
#######################
attr_table_sr <- titer_table |>
  slice(-(1:7)) |> 
  slice_head(n = 2) |> 
  t() |> 
  as_tibble() |> 
  slice(-(1:6)) |> 
  set_colnames_from_row(row_number = 1) |> 
  #Removing semicolon from names
  rename_with( ~ gsub(":", "", .x))

attr_table_ag <- titer_table |> 
  slice(-(1:9)) |> 
  t() |> 
  as_tibble() |> 
  slice(-(1:3)) |> 
  slice_head(n = 4) |> 
  t() |> 
  as_tibble() |> 
  set_colnames_from_row(row_number = 1) |> 
  rename_with( ~ gsub(":", "", .x))
  
  
  
## Table information
table_info <- tibble(
  virus_type = as.character(titer_table[2, 9]),
  assay_type = as.character(titer_table[2, 11]),
  viral_protein = as.character(titer_table[4, 9]),
  species = as.character(titer_table[4, 11]),
  antigen_sera_n = antigen_sera_n,
  virus_strains_n = virus_strains_n
)


```

## Writing files 

```{r}

write_tsv(table_info,
            file = "../data/table_info.tsv")

write_tsv(attr_table_ag,
            file = "../data/attr_table_ag.tsv")

write_tsv(attr_table_sr,
            file = "../data/attr_table_sr.tsv")

write_tsv(titer_clean,
            file = "../data/titer_clean.tsv")


```


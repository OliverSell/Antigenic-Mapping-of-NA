## Source functions

```{r}
source("../R/99_proj_func.R")
```

## Libraries:

```{r}
#| message: false
#| warning: false
## ASK MARTHA
## ASK MARTHA
## ASK MARTHA

library("tidyverse")
library("dplyr")
library("Racmacs")
library("svglite")
library("viridis")
```

## Load data

```{r}
#| message: false
#| warning: false
titer_table_covid <- read_tsv("../data/titer_table.tsv.gz")
```

## Data wrangling

```{r}
#| warning: false
########################
#### Titer Cleaning ####
########################
titer_dirty <- titer_table_covid |>
  # Remove first with meta data.
  slice(-(1:8)) |>
  # Remove coloumns that have no data. 
  # Function keeps columns with at least one value is not NA. 
  dplyr::select(where(~ any(!is.na(.)))) |> 
  set_colnames_from_row(row_number = 1) |> 
  t() |> 
  as_tibble(rownames = NA) |> 
  slice(-(1:2)) |> 
  select(where(~ !(all(is.na(.)) | all(. == "")))) |> 
  set_colnames_from_row(row_number = 1) |> 
  select(-1) |> 
  as.data.frame()

#Fetches the names of the sera
sera_names <- titer_table_covid |>
  slice(-(1:8)) |>
  dplyr::select(where(~ any(!is.na(.)))) |> 
  head(1) |> 
  select(-(1:3)) |> 
  as_vector()

#Adds sera names
row.names(titer_dirty) <- sera_names

titer_clean <- t(titer_dirty)

#Getting data ready for mapping
titer_clean <- titer_clean |> 
  as.data.frame() |> 
  mutate(across(everything(), ~replace_na(.x, "*")))

#Defining the amount of sera and antigen
antigen_sera_n <- ncol(titer_clean)
virus_strains_n <- nrow(titer_clean)


#######################
### Attribute Table ###
#######################
attr_table <- titer_table_covid |>
  slice(-(1:7)) |> 
  slice_head(n = 2) |> 
  t() |> 
  as_tibble() |> 
  slice(-(1:4)) |> 
  set_colnames_from_row(row_number = 1) |> 
  slice_head(n = antigen_sera_n) |> 
  #Removing semicolon from names
  rename_with( ~ gsub(":", "", .x))

## Table information
table_info <- tibble(
  virus_type = as.character(titer_table_covid[2, 7]),
  species = as.character(titer_table_covid[2, 9]),
  viral_protein = as.character(titer_table_covid[4, 7]),
  assay_type = as.character(titer_table_covid[4, 9])
)


```

## Antigenic mapping

```{r}
############################
#   Creating map object    #
############################
set.seed(696969)

options(RacOptimizer.num_cores = 1)

covid_map <- acmap(
  titer_table = titer_clean
)
# Perform optimization runs on the map object to try and determine a best map


covid_map <- optimizeMap(
  map                     = covid_map,
  number_of_dimensions    = 2,
  number_of_optimizations = 10000,
  minimum_column_basis    = "none"
)

############################
# Extract map coordinates  #
############################
ag_coords <- agCoords(covid_map)  # Antigen coordinates
sr_coords <- srCoords(covid_map)  # Serum coordinates

############################
# Combine ag and sr data   #
############################
ag_df <- as.data.frame(ag_coords) |>
  mutate(antigenic_group = rownames(ag_coords),
         type = 'AG')

sr_df <- as.data.frame(sr_coords) |>
  mutate(serum = rownames(sr_coords),
         type = 'SR')

dd <- bind_rows(ag_df, sr_df)

dd <- dd |> mutate(serum_group = attr_table$"Serum exposure"[match(dd$serum, attr_table$"Serum IDs")])

############################
#     Unique colouring     #
############################
unique_AG <- dd |> 
  filter(type == "AG") |> 
  pull(antigenic_group) |> 
  unique()

colors_for_AG <- setNames(
  viridis::viridis(
    length(unique_AG), 
    option = "turbo"), 
  unique_AG)

colors_for_AG <- sapply(
  colors_for_AG, 
  adjustcolor, 
  alpha.f = 0.8)

unique_SR <- dd |> filter(type == "SR") |> pull(serum_group) |> unique()
colors_for_SR <- setNames(viridis::viridis(
  length(unique_SR), 
  option = "mako"),    # FIX FIX
  unique_SR) 
## Find new color gradiant
## Find new color gradiant
## Find new color gradiant
# ATColors <- data.frame(name = c("ATBlue", "ATYellow", "ATOrange"), color= c("#1A73BA", "#F7D364", "#B54B05"))

############################
# Generating Antigenic Map #
############################
ag_map_1 <- ggplot(dd) +
  geom_point(data = filter(dd, 
                           type == "SR"), 
             aes(x = V1, 
                 y = V2, 
                 shape = type,
                 color = serum_group), 
             size = 2,
             shape = 0,
             stroke = 0.5) +
  geom_point(data = filter(dd, 
                            type == "AG"), 
             aes(x = V1, 
                 y = V2, 
                 fill = antigenic_group), 
             shape = 21, 
             size = 6, 
             color = "black") +
  scale_fill_manual(values = colors_for_AG) +
  scale_color_manual(values = colors_for_SR) +
  theme_minimal() +
  labs(title = paste0("Antigenic map of ", 
                         table_info |> 
                           pull(virus_type),
                      " variants"),
       subtitle = paste0("Inhibition titers for ",
                       table_info |> 
                         pull(viral_protein),
                       " analyzed via ", 
                       table_info |> 
                         pull(assay_type)),
       x = "MSD-1", 
       y = "MSD-2",
       fill = "Antigenic group",
       color = "Serum group",
       caption = "Wilks et al., 2023") +
  guides(fill = guide_legend(override.aes = list(size = 5)),
         shape = "none",
         size = "none") + 
  theme(
    axis.text.x = element_blank(), 
    axis.text.y = element_blank(),
    plot.background = element_blank(), 
    panel.background = element_rect(colour = "#0000CD"), ## FIX FIX FIX
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "azure4", 
                                fill=NA, 
                                size=1.5),
    plot.caption = element_text(hjust = 1, 
                                vjust = 1, 
                                margin = margin(t = 1, 
                                                unit = "pt"), 
                                size = 12, 
                                color = "darkgrey",
                                face = "italic"),
    legend.box.spacing = unit(10, "pt"),
    plot.margin = margin(t = 20, 
                         r = 10, 
                         b = 5, 
                         l = 15, 
                         unit = "pt"),
    plot.subtitle = element_text(margin = margin(t = 2,
                                                 b = 10, 
                                                 unit = "pt")),
    plot.title = element_text(face = "bold"),
    plot.caption.position = "plot",
    plot.title.position = "plot",
    legend.position = "right",
    legend.spacing.y = unit(-7, "pt")
    )


ag_map_2 <- ggplot(dd) +
  geom_point(data = filter(dd, 
                           type == "SR"), 
             aes(x = V1, 
                 y = V2, 
                 shape = type,
                 color = serum_group), 
             size = 2,
             shape = 0,
             stroke = 0.5) +
  
  geom_point(data = filter(dd, 
                            type == "AG"), 
             aes(x = V1, 
                 y = V2, 
                 fill = antigenic_group), 
             shape = 21, 
             size = 6, 
             color = "black") +
  
  geom_text_repel(data = filter(dd, 
                                type == "AG"), 
                  aes(x = V1, 
                      y = V2, 
                      label = antigenic_group), 
                  size = 3, 
                  box.padding = unit(1.0, "lines"), 
                  point.padding = unit(1.0, "lines"),
                  max.iter = 10000) +
  
  scale_fill_manual(values = colors_for_AG) +
  scale_color_manual(values = colors_for_SR) +
  theme_minimal() +
  labs(title = paste0("Antigenic map of ", 
                         table_info |> 
                           pull(virus_type),
                      " variants"),
       subtitle = paste0("Inhibition titers for ",
                       table_info |> 
                         pull(viral_protein),
                       " analyzed via ", 
                       table_info |> 
                         pull(assay_type)),
       x = "", 
       y = "",
       fill = "Antigenic group",
       color = "Serum group",
       caption = "Wilks et al., 2023") +
  guides(fill = guide_legend(override.aes = list(size = 5)),
         shape = "none",
         size = "none") + 
  theme(
    axis.text.x = element_blank(), 
    axis.text.y = element_blank(),
    plot.background = element_blank(), 
    panel.background = element_rect(colour = "#0000CD"), ## FIX FIX FIX
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "azure4", 
                                fill=NA, 
                                size=1.5),
    plot.caption = element_text(hjust = 1, 
                                vjust = 1, 
                                margin = margin(t = 1, 
                                                unit = "pt"), 
                                size = 12, 
                                color = "darkgrey",
                                face = "italic"),
    legend.box.spacing = unit(10, "pt"),
    plot.margin = margin(t = 20, 
                         r = 10, 
                         b = 5, 
                         l = 15, 
                         unit = "pt"),
    plot.subtitle = element_text(margin = margin(t = 2,
                                                 b = 10, 
                                                 unit = "pt")),
    plot.title = element_text(face = "bold"),
    plot.caption.position = "plot",
    plot.title.position = "plot",
    legend.position = "none",
    legend.spacing.y = unit(-7, "pt")
    )

ggplot(dd) +
  geom_point(data = filter(dd, 
                           type == "SR"), 
             aes(x = V1, 
                 y = V2, 
                 shape = type,
                 color = serum_group), 
             size = 2,
             shape = 0,
             stroke = 0.5) +
  
  geom_point(data = filter(dd, 
                            type == "AG"), 
             aes(x = V1, 
                 y = V2, 
                 fill = antigenic_group), 
             shape = 21, 
             size = 6, 
             color = "black") +
  
  geom_text_repel(aes(x = V1, 
                       y = V2, 
                       label = antigenic_group),
                  size = 3,
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.linetype = 1,
                  min.segment.length = 0.7,
                  arrow = arrow(length = unit(0.015, "npc")),
                  segment.alpha = 0.7) +
  
  scale_fill_manual(values = colors_for_AG) +
  scale_color_manual(values = colors_for_SR) +
  theme_minimal() +
  labs(title = paste0("Antigenic map of ", 
                         table_info |> 
                           pull(virus_type),
                      " variants"),
       subtitle = paste0("Inhibition titers for ",
                       table_info |> 
                         pull(viral_protein),
                       " analyzed via ", 
                       table_info |> 
                         pull(assay_type)),
       x = "", 
       y = "",
       fill = "Antigenic group",
       color = "Serum group",
       caption = "Wilks et al., 2023") +
  guides(fill = guide_legend(override.aes = list(size = 5)),
         shape = "none",
         size = "none") + 
  theme(
    axis.text.x = element_blank(), 
    axis.text.y = element_blank(),
    plot.background = element_blank(), 
    panel.background = element_rect(colour = "#0000CD"), ## FIX FIX FIX
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "azure4", 
                                fill=NA, 
                                size=1.5),
    plot.caption = element_text(hjust = 1, 
                                vjust = 1, 
                                margin = margin(t = 1, 
                                                unit = "pt"), 
                                size = 12, 
                                color = "darkgrey",
                                face = "italic"),
    legend.box.spacing = unit(10, "pt"),
    plot.margin = margin(t = 20, 
                         r = 10, 
                         b = 5, 
                         l = 15, 
                         unit = "pt"),
    plot.subtitle = element_text(margin = margin(t = 2,
                                                 b = 10, 
                                                 unit = "pt")),
    plot.title = element_text(face = "bold"),
    plot.caption.position = "plot",
    plot.title.position = "plot",
    legend.position = "none",
    legend.spacing.y = unit(-7, "pt")
    )

```

Saving the relevant values

```{r}
############################
# Save the map (.svg.tiff) #
############################
folder_name <- paste0("../results/antigenic_map_", 
                      table_info |>
                          pull(virus_type) , 
                      "_", Sys.Date())
make_dir(folder_name)

base_filename <- paste0("antigenic_map_", 
                        table_info |>
                          pull(virus_type), 
                        "_", Sys.Date())

ggsave(
  plot = ag_map_1,
  filename = paste0(base_filename, ".svg"),
  path = folder_name,
  device = "svg",
  width = 20,
  height = 12,
  units = "cm",
)
ggsave(
  plot = ag_map_2,
  filename = paste0(base_filename,"_label", ".svg"),
  path = folder_name,
  device = "svg",
  width = 20,
  height = 12,
  units = "cm",
)

# Save the plot as TIFF
ggsave(
  plot = ag_map_1,
  filename = paste0(base_filename, ".tiff"),
  path = folder_name,
  device = "tiff",
  dpi = 300, # Set the desired resolution
  width = 20,
  height = 12,
  units = "cm",
)

ggsave(
  plot = ag_map_2,
  filename = paste0(base_filename,"_label", ".tiff"),
  path = folder_name,
  device = "tiff",
  dpi = 300, # Set the desired resolution
  width = 20,
  height = 12,
  units = "cm",
)
```


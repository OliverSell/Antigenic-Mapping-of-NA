---
title: "Augment data"
format: html
editor: source
author: authors
---

### Source functions

```{r}
source("../R/99_proj_func.R")
```

### Library

```{r}
#| eval: true
#| echo: true

library("tidyverse")
library("Racmacs")
```

### Loading

```{r}

ag_names <- read_tsv(file = "../data/ag_names.tsv")
titer_clean <- read_tsv(file = "../data/titer_clean.tsv")
titer_clean <- as.data.frame(titer_clean)
ag_names <- ag_names[["value"]]
row.names(titer_clean) <- ag_names

```


### Augment

```{r}
############################
#   Creating map object    #
############################
set.seed(696969)

#options(RacOptimizer.num_cores = 1)
options(RacOptimizer.num_cores = parallel::detectCores())

map <- acmap(
  titer_table = titer_clean
)
# Perform optimization runs on the map object to try and determine a best map

map <- optimizeMap(
  map,
  number_of_dimensions    = 2,
  number_of_optimizations = 10000,
  minimum_column_basis    = "none"
)

print(mapStress(map))

#### UNCERTAINTY
#### UNCERTAINTY
#### UNCERTAINTY
triangulationBlobs(
  map,
  optimization_number = 10,
  stress_lim = 1,
  grid_spacing = 0.25,
  antigens = TRUE,
  sera = TRUE,
  .check_relaxation = TRUE,
  .options = list()
)


bootstrapMap(
  map,
  method = "resample", #"resample", "bayesian" or "noisy"
  bootstrap_repeats = 1000,
  bootstrap_ags = TRUE,
  bootstrap_sr = TRUE,
  reoptimize = TRUE,
  optimizations_per_repeat = 100,
  ag_noise_sd = 0.7,
  titer_noise_sd = 0.7,
  options = list()
)

bootstrapBlobs(
  map,
  conf.level = 0.68,
  smoothing = 6,
  gridspacing = 0.25,
  antigens = TRUE,
  sera = TRUE,
  method = "ks"
)

#### UNCERTAINTY
#### UNCERTAINTY
#### UNCERTAINTY

```


### map file

```{r}

# Define the path to the 'results' directory relative to the 'R' directory
results_directory <- file.path(getwd(), "../data")

# Specify the filename directly instead of using tempfile
# Replace 'my_custom_filename' with your desired filename
custom_filename <- "map.ace"  # Change 'my_custom_filename' to whatever you want
file_path <- file.path("../data", custom_filename)

# Use the specified path to save the .ace file
save.acmap(
  map,
  file_path)

```

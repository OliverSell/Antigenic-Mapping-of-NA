---
title: "Analyse data"
format: html
editor: source
author: authors
---

### Source functions

```{r}
source("../R/99_proj_func.R")
```

### Library

```{r}
#| eval: true
#| echo: true
#| warning: false

library("tidyverse")
library("Racmacs")
library("viridis")
library("ggrepel")
library("svglite")
library("ggforce")
library("dbscan")
library("RColorBrewer")



```

### Loading

```{r}
file_path <- file.path(getwd(), "../data/map_covid.ace")

map <- read.acmap(
  file_path,
  optimization_number = 1,
  sort_optimizations = FALSE,
  align_optimizations = FALSE
)

attr_table_ag <- read_tsv(file = "../data/attr_table_ag.tsv")
attr_table_sr <- read_tsv(file = "../data/attr_table_sr.tsv")
table_info <- read_tsv(file = "../data/table_info.tsv")


```

```{r}
#options(RacOptimizer.num_cores = 1)
options(RacOptimizer.num_cores = parallel::detectCores())

map <- relaxMap(
  map,
  optimization_number = 1,
  fixed_antigens = FALSE,
  fixed_sera = FALSE,
  titer_weights = NULL,
  options = list()
)
#### UNCERTAINTY


# Calculate triangulation blobs
triangulation <- triangulationBlobs(map, grid_spacing = 0.05, stress_lim = 1)

# Plot maps
maplims <- Racmacs:::mapPlotLims(map, sera = TRUE)
gp_triangulation <- ggplot(triangulation, xlim = maplims$xlim, ylim = maplims$ylim)
#### UNCERTAINTY
#### UNCERTAINTY
map_blob <- triangulationBlobs(
  map,
  optimization_number = 1,
  stress_lim = 1,
  grid_spacing = 0.05,
  antigens = TRUE,
  sera = TRUE,
  .check_relaxation = TRUE
)

contour_blob(map)

ggplot(map_blob)

plot(map_blob)
view(map_blob)

bootstrapMap(
  map,
  method = "resample", #"resample", "bayesian" or "noisy"
  bootstrap_repeats = 1000,
  bootstrap_ags = TRUE,
  bootstrap_sr = TRUE,
  reoptimize = TRUE,
  optimizations_per_repeat = 100,
  ag_noise_sd = 0.7,
  titer_noise_sd = 0.7,
  options = list()
)

bootstrapBlobs(
  map,
  conf.level = 0.68,
  smoothing = 6,
  gridspacing = 0.25,
  antigens = TRUE,
  sera = TRUE,
  method = "ks"
)

```

```{r}
milestone_2 <- ggplot(dd) +
  geom_point(data =  filter(dd, type == "SR", !is.na(serum_group)), 
             aes(x = V1, y = V2, shape = type, color = serum_group), 
             size = 2, shape = 0, stroke = 0.4, alpha = 0.7) + 
  geom_point(data = filter(dd, is.na(serum_group)),  
             aes(x = V1, y = V2, color = "Other"),  
             shape = 0, size = 2, alpha = 0.7) +
  geom_point(data = filter(dd, type == "AG"), 
             aes(x = V1, y = V2, fill = antigen), 
             shape = 21, size = 6, color = "black") +
  
  scale_y_reverse(breaks = seq(floor(range(dd$V2))[1], 
                               ceiling(range(dd$V2))[2]),
                  expand = expansion(mult = 0, add = 1.0)) +
  scale_x_continuous(breaks = seq(floor(range(dd$V1))[1], 
                                  ceiling(range(dd$V1))[2]),
                     expand = expansion(mult = 0, add = 1.0)) +

  coord_fixed() + 
  scale_size_identity() + 
  
  scale_fill_manual(values = combined_colors) +
  scale_color_manual(values = combined_colors) +
  
  theme_minimal() +
  labs(title = "Antigenic map of Influenza variants",
       subtitle = "Inhibition titers for neuraminidase analyzed via ELLA",
       x = "", y = "", 
       color = "Serum group",
       fill = "Antigen") +
  theme(axis.text.x = element_blank(), 
        axis.text.y = element_blank(),
        plot.background = element_rect(fill = "white"), 
        panel.background = element_rect(fill = "white"), 
        panel.grid.major = element_line(), 
        panel.grid.minor = element_blank(), 
        legend.title = element_text(margin = margin(l = 1, unit = "pt")),
        legend.text = element_text(size = 8),
        panel.border = element_rect(colour = "azure4", 
                                    fill = NA, 
                                    size = 1.5), 
        plot.margin = margin(t = 20, 
                             r = 20, 
                             b = 10, 
                             l = 10, 
                             unit = "pt"),
        plot.subtitle = element_text(margin = margin(t = 2, 
                                                     b = 10, 
                                                     l = 10,
                                                     r = 5,
                                                     unit = "pt"),
                                     size = 10),
        plot.title = element_text(face = "bold",
                                  margin = margin(l = 10, 
                                                    unit = "pt")), 
        plot.title.position = "plot",
        legend.margin= margin(l = 10, unit = "pt"),
        legend.position = "right") +
  labs(fill = "Antigen") + 
  guides(fill = guide_legend(override.aes = list(size = 3)), 
         shape = "none", size = "none",
         color = guide_legend(override.aes = list(size = 2, stroke = 0.8)))


```

```{r}
milestone_3a <- ggplot(dd) +
  geom_point(data =  filter(dd, type == "SR", !is.na(serum_group)), 
             aes(x = V1, y = V2, shape = type, color = serum_group), 
             size = 2, shape = 0, stroke = 0.4, alpha = 0.7) + 
  geom_point(data = filter(dd, is.na(serum_group)),  
             aes(x = V1, y = V2, color = "Other"),  
             shape = 0, size = 2, alpha = 0.7) +
  geom_point(data = filter(dd, type == "AG"), 
             aes(x = V1, y = V2, fill = antigen), 
             shape = 21, size = 6, color = "black") +
  
  scale_y_reverse(breaks = seq(floor(range(dd$V2))[1], 
                               ceiling(range(dd$V2))[2]),
                  expand = expansion(mult = 0, add = 1.0)) +
  scale_x_continuous(breaks = seq(floor(range(dd$V1))[1], 
                                  ceiling(range(dd$V1))[2]),
                     expand = expansion(mult = 0, add = 1.0)) +
  geom_text_repel(aes(x = V1, 
                      y = V2, 
                      label = antigen),
                  size = 3, 
                  box.padding = unit(0.4, 
                                     "lines"), 
                  point.padding = unit(1.05, "lines"),
                  segment.linetype = 1, 
                  min.segment.length = 0.4, 
                  arrow = arrow(length = unit(0.015, "npc")),
                  segment.curvature = 0, 
                  segment.alpha = 0.7, 
                  force_pull = 1.0, 
                  force = 1.0, 
                  max.iter = 10000,
                  xlim = c(-NA, NA), 
                  ylim = c(-NA, NA), 
                  bg.color = "white", 
                  bg.r = 0.10) +

  coord_fixed() + 
  scale_size_identity() + 
  
  scale_fill_manual(values = combined_colors) +
  scale_color_manual(values = combined_colors) +
  
  theme_minimal() +
  labs(title = "Antigenic map of Influenza variants",
       subtitle = "Inhibition titers for neuraminidase analyzed via ELLA",
       x = "", y = "", 
       color = "Serum group",
       fill = "Antigen") +
  theme(axis.text.x = element_blank(), 
        axis.text.y = element_blank(),
        plot.background = element_rect(fill = "white"), 
        panel.background = element_rect(fill = "white"), 
        panel.grid.major = element_line(), 
        panel.grid.minor = element_blank(), 
        legend.title = element_text(margin = margin(l = 1, unit = "pt")),
        legend.text = element_text(size = 8),
        panel.border = element_rect(colour = "azure4", 
                                    fill = NA, 
                                    size = 1.5), 
        plot.margin = margin(t = 20, 
                             r = 20, 
                             b = 10, 
                             l = 10, 
                             unit = "pt"),
        plot.subtitle = element_text(margin = margin(t = 2, 
                                                     b = 10, 
                                                     l = 10,
                                                     r = 5,
                                                     unit = "pt"),
                                     size = 10),
        plot.title = element_text(face = "bold",
                                  margin = margin(l = 10, 
                                                    unit = "pt")), 
        plot.title.position = "plot",
        legend.margin= margin(l = 10, unit = "pt"),
        legend.position = "right") +
  labs(fill = "Antigen") + 
  guides(fill = FALSE, 
         shape = "none", size = "none",
         color = guide_legend(override.aes = list(size = 2, stroke = 0.8)))

milestone_3b <- ggplot(dd) +
  geom_point(data =  filter(dd, type == "SR", !is.na(serum_group)), 
             aes(x = V1, y = V2, shape = type, color = serum_group), 
             size = 2, shape = 0, stroke = 0.4, alpha = 0.7) + 
  geom_point(data = filter(dd, is.na(serum_group)),  
             aes(x = V1, y = V2, color = "Other"),  
             shape = 0, size = 2, alpha = 0.7) +
  geom_point(data = filter(dd, 
                           type == "AG"), 
             aes(x = V1, y = V2, fill = antigenic_group), 
             shape = 21, size = 6, color = "black")  +
  
  scale_y_reverse(breaks = seq(floor(range(dd$V2))[1], 
                               ceiling(range(dd$V2))[2]),
                  expand = expansion(mult = 0, add = 1.0)) +
  scale_x_continuous(breaks = seq(floor(range(dd$V1))[1], 
                                  ceiling(range(dd$V1))[2]),
                     expand = expansion(mult = 0, add = 1.0)) +
  geom_text_repel(data = dd_multiple_entries,
                  aes(x = V1, 
                      y = V2, 
                      label = antigen),
                  size = 3, 
                  box.padding = unit(0.35, "lines"), 
                  point.padding = unit(0.8, "lines"),
                  segment.linetype = 1, 
                  min.segment.length = 0.4, 
                  arrow = arrow(length = unit(0.015, "npc")),
                  segment.curvature = 0, 
                  segment.alpha = 0.7, 
                  force_pull = 1.0, 
                  force = 1.0, 
                  max.iter = 10000,
                  xlim = c(-NA, NA), 
                  ylim = c(-NA, NA), 
                  bg.color = "white", 
                  bg.r = 0.10) +
  coord_fixed() + 
  scale_size_identity() + 
  
  scale_fill_manual(values = combined_colors) +
  scale_color_manual(values = combined_colors) +
  
  theme_minimal() +
  labs(title = paste0("Antigenic map of ", table_info |> pull(virus_type), " variants"),
       subtitle = paste0("Inhibition titers for ", table_info |> pull(viral_protein), 
                         " analyzed via ", table_info |> pull(assay_type)),
       x = "", y = "", 
       color = "Serum group",
       fill = "Antigenic group") +
  theme(axis.text.x = element_blank(), 
        axis.text.y = element_blank(),
        plot.background = element_rect(fill = "white"), 
        panel.background = element_rect(fill = "white"), 
        panel.grid.major = element_line(), 
        panel.grid.minor = element_blank(), 
        legend.title = element_text(margin = margin(l = 1, unit = "pt")),
        legend.text = element_text(size = 8),
        panel.border = element_rect(colour = "azure4", 
                                    fill = NA, 
                                    size = 1.5), 
        plot.margin = margin(t = 20, 
                             r = 20, 
                             b = 10, 
                             l = 10, 
                             unit = "pt"),
        plot.subtitle = element_text(margin = margin(t = 2, 
                                                     b = 10, 
                                                     l = 10,
                                                     r = 5,
                                                     unit = "pt"),
                                     size = 10),
        plot.title = element_text(face = "bold",
                                  margin = margin(l = 10, 
                                                    unit = "pt")), 
        plot.title.position = "plot",
        legend.margin= margin(l = 10, unit = "pt"),
        legend.position = "right") +
  labs(fill = "Antigen") + 
  guides(fill = guide_legend(override.aes = list(size = 3)), 
         shape = "none", size = "none",
         color = guide_legend(override.aes = list(size = 2, stroke = 0.8)))
```

```{r}
##############
# Clustering #
##############
ag_map_6 <- base_map + 
  geom_mark_ellipse(
    data = filter(dd, cluster > 0),  
    aes(x = V1, y = V2, group = factor(cluster), color = factor(cluster)),
    fill = NA,  # No fill for ellipses
    expand = unit(0.05, 'npc'), alpha = 1.0, size = 1.0, linetype = 3,
    show.legend = FALSE
  ) +
  geom_point(
    data = filter(dd, type == "AG"), 
    aes(x = V1, y = V2, fill = antigen),  # Fill based on antigenic group
    shape = 21, size = 6, color = "black"
  ) +
  labs(fill = "Antigen") + 
  guides(fill = guide_legend(override.aes = list(size = 3)), 
         color = guide_legend(override.aes = list(size = 2))) +
  scale_color_manual(values = combined_colors,
                     breaks = unique_serum_exposures, # Specify which legends to display
                     labels = unique_serum_exposures)

ag_map_7 <- base_map + 
  geom_mark_ellipse(
    data = filter(dd, cluster > 0),  
    aes(x = V1, y = V2, group = factor(cluster), color = factor(cluster)),
    fill = NA,  # No fill for ellipses
    expand = unit(0.05, 'npc'), alpha = 1.0, size = 1.0, linetype = 3,
    show.legend = FALSE
  ) +
  geom_point(
    data = filter(dd, type == "AG"), 
    aes(x = V1, y = V2, fill = antigenic_group),  # Fill based on antigenic group
    shape = 21, size = 6, color = "black"
  ) +
  labs(fill = "Antigenic group") + 
  guides(fill = guide_legend(override.aes = list(size = 3)), 
         color = guide_legend(override.aes = list(size = 2))) +
  scale_color_manual(values = combined_colors,
                     breaks = unique_serum_exposures, # Specify which legends to display
                     labels = unique_serum_exposures)


ag_map_8 <- base_map + 
  geom_mark_ellipse(
    data = filter(dd, cluster > 0),  
    aes(x = V1, y = V2, group = factor(cluster), color = factor(cluster)),
    fill = NA,  # No fill for ellipses
    expand = unit(0.05, 'npc'), alpha = 1.0, size = 1.0, linetype = 3,
    show.legend = FALSE
  ) +
  geom_point(
    data = filter(dd, type == "AG"), 
    aes(x = V1, y = V2, fill = antigenic_group),  # Fill based on antigenic group
    shape = 21, size = 6, color = "black"
  ) +

  geom_text_repel(data = dd_cluster,
                  aes(x = V1, 
                      y = V2, 
                      label = antigen),
                  size = 3, 
                  box.padding = unit(0.35, "lines"), 
                  point.padding = unit(0.8, "lines"),
                  segment.linetype = 1, 
                  min.segment.length = 0.4, 
                  arrow = arrow(length = unit(0.015, "npc")),
                  segment.curvature = 0, 
                  segment.alpha = 0.7, 
                  force_pull = 1.0, 
                  force = 1.0, 
                  max.iter = 10000,
                  xlim = c(-NA, NA), 
                  ylim = c(-NA, NA), 
                  bg.color = "white", 
                  bg.r = 0.10) +
  labs(fill = "Antigenic group") + 
  guides(fill = guide_legend(override.aes = list(size = 3)), 
         color = guide_legend(override.aes = list(size = 2))) +
  scale_color_manual(values = combined_colors,
                     breaks = unique_serum_exposures, # Specify which legends to display
                     labels = unique_serum_exposures) 
```


## Save

```{r}
# Define the path to the 'results' directory relative to the 'R' directory
results_directory <- file.path(getwd(), "../data")


custom_filename <- "map_blob.ace"  
file_path <- file.path("../data", custom_filename)

# Use the specified path to save the .ace file
save.acmap(
  map_blob,
  file_path)
```

